
@using ClassLibrary.Models
@inject APICRUD apiCRUD
@inject string APIConnection
@using Microsoft.AspNetCore.Components
@using System.Text.Json
@page "/"

<body>
<PageTitle>Index</PageTitle>
<h1>Hello, world!</h1>

Welcome to your new app.

<AuthorizeView>
    <NotAuthorized>
        <p>You are not signed in.</p>
        @if (listOfSkills is null)
        {
            <p>Skill List Empty</p>
        } else
        {
            @foreach (var item in listOfSkills)
            {
                <div class="card p-2">
                    <h4>@item.Title</h4>
                    <p>@item.Description</p>
                    <p>@item.SkillLevel /10</p>
                    <p>@item.YearsOfExperience Years of Experience</p>
                </div>
            }
        }
    </NotAuthorized>
        
    <Authorized>
        <EditForm Model="NewSkill" OnValidSubmit="SubmitSkill" Context="editContext">
            <DataAnnotationsValidator />
        
            <div class="form-group">
            <label for="title">Title</label>
            <InputText class="form-control" @bind-Value="NewSkill.Title" ></InputText>
            <ValidationMessage For="@(() => NewSkill.Title)" />
            </div>
        
            <div class="form-group">
            <label for="description">Description</label>
            <InputText class="form-control" @bind-Value="NewSkill.Description" ></InputText>
                    <ValidationMessage For="@(() => NewSkill.Description)"  />
            </div>
        
            <div class="form-group">
                <label for="level">Level</label>
                <InputNumber class="form-control" @bind-Value="NewSkill.SkillLevel"></InputNumber>
                    <ValidationMessage For="@(() => NewSkill.SkillLevel)" />
            </div>
            
            <div class="form-group">
                    <label for="years-of-experience">Years of Experience</label>
                    <InputNumber class="form-control" @bind-Value="NewSkill.YearsOfExperience"></InputNumber>
                    <ValidationMessage For="@(() => NewSkill.YearsOfExperience)" />
            </div><br/>
                <ValidationSummary />
           
            <button class="btn btn-primary my-4" type="submit" >Submit</button>
        
        </EditForm>
    </Authorized>
</AuthorizeView>
        
</body>

@code {
    //--- Properties ---
    private Skills NewSkill { get; set; } = new() {Id = Guid.NewGuid()};
    List<Skills>? listOfSkills;

    //---Methods---

    protected override async Task OnInitializedAsync()
    {
        try
        {
            listOfSkills = await apiCRUD.ListSkills(APIConnection);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    //Doesnt Work for some reason.
    private async Task SubmitSkill() 
    {
        try
        {
            await apiCRUD.AddSkill(APIConnection, NewSkill);
            // NewSkill = new() { Id = Guid.NewGuid() };
            Console.WriteLine("SubmitSkill Complete");
        }
        catch (Exception ex)
        {
            //Some sort of error logger?
            Console.WriteLine($"Error. {ex.Message}");
        }
    }
}