
@using ClassLibrary.Models
@inject APICRUD apiCRUD
@inject string APIConnection
@using Microsoft.AspNetCore.Components
@page "/"

<PageTitle>Index</PageTitle>
<h1>Hello, world!</h1>

Welcome to your new app.

<AuthorizeView>
    <NotAuthorized>
        <p>You are not signed in.</p>
        @foreach (var item in listOfSkills)
        {
            <div class="card">
                <h4>@item.Title</h4>
                <p>@item.Description</p>
                <p>@item.SkillLevel /10</p>
                <p>@item.YearsOfExperience Years of Experience</p>
            </div>
        }
    </NotAuthorized>
    <Authorized>

    </Authorized>
</AuthorizeView>
        
        <EditForm Model="NewSkill" OnValidSubmit="SubmitSkill">
            <DataAnnotationsValidator />
        
            <div class="form-group">
            <label>Title</label>
            <InputText class="form-control" @bind-Value="NewSkill.Title" ></InputText>
            </div>
        
            <div class="form-group">
            <label>Description</label>
            <InputText class="form-control" @bind-Value="NewSkill.Description" ></InputText>
            </div>
        
            <div class="form-group">
                <label>Level</label>
                <InputNumber class="form-control" @bind-Value="NewSkill.SkillLevel"></InputNumber>
            </div>
    <div class="form-group">
        <label>Years of Experience</label>
        <InputNumber class="form-control" @bind-Value="NewSkill.YearsOfExperience"></InputNumber>
    </div>
            <button class="btn btn-primary" type="submit" >Submit</button>
        
        </EditForm>

<SurveyPrompt Title="How is Blazor working for you?" />

        
@code {
    private Skills NewSkill { get; set; } = new();
    List<Skills> listOfSkills { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            listOfSkills = await apiCRUD.ListSkills(APIConnection);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task SubmitSkill()
    {
        try
        {
            await apiCRUD.AddSkill(APIConnection, NewSkill);
            NewSkill = new();

        } catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

}